from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, KeyboardButtonPollType
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from decouple import config


def main_kb(user_telegram_id: int):
    """
    –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –∫–æ—Ç–æ—Ä—É—é –º—ã –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ —Å–æ–æ–±—â–µ–Ω–∏—é.
    """
    kb_list = [  # c–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫:
        [KeyboardButton(text="üìñ –û –Ω–∞—Å"), KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")],
        [KeyboardButton(text="üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"), KeyboardButton(text="üìö –ö–∞—Ç–∞–ª–æ–≥"), KeyboardButton(text="–î–∞–≤–∞–π –∏–Ω–ª–∞–π–Ω!")],
    ]

    # –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–π –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –∞–¥–º–∏–Ω
    if user_telegram_id in [int(admin_id) for admin_id in config('ADMINS').split(',')]:
        kb_list.append([KeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")])

    keyboard = ReplyKeyboardMarkup(   # c–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard=kb_list,
        resize_keyboard=True,         # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä
        one_time_keyboard=False,      # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–¥–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        # input_field_placeholder=''  # –∑–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ø–æ–¥–ø–∏—Å—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é
    )
    return keyboard


def spec_kb():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Å–æ–±—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏: –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏, –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –ª–æ–∫–∞—Ü–∏–µ–π, —Å–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å.
    """
    kb_list = [
        # –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
        [KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ", request_location=True)],
        # –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä
        [KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)],
        # –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –∏–ª–∏ –æ–ø—Ä–æ—Å. –ú–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        # type = ¬´quiz¬ª (–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞) –∏–ª–∏ ¬´regular¬ª (–æ–ø—Ä–æ—Å).
        [KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É/–æ–ø—Ä–æ—Å", request_poll=KeyboardButtonPollType())],
        [KeyboardButton(text="–î–æ–º–æ–π")],
    ]
    keyboard = ReplyKeyboardMarkup(
        keyboard=kb_list,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π:",
    )
    return keyboard


def create_rat_kb():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —à–∫–∞–ª–æ–π –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –≤–∏–¥–µ –±–∞–ª–ª–æ–≤ –æ—Ç 1 –¥–æ 10.
    """
    builder = ReplyKeyboardBuilder()                # –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    for item in [str(i) for i in range(1, 11)]:
        builder.button(text=item)                   # —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫-–∫–Ω–æ–ø–æ–∫ –æ—Ç '1' –¥–æ '10'
    builder.button(text='–î–æ–º–æ–π')                    # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥
    builder.adjust(4, 4, 2, 1)                      # –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    return builder.as_markup(resize_keyboard=True)  # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –æ–±—ä–µ–∫—Ç ReplyKeyboardMarkup
